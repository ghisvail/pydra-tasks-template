#This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# Note that editable installs of Pydra and the task package is useful to ensure that the
# template describes namespace packages that can be used in various development environments.
# Packages that use it probably do not want to continue testing with editable installations,
# quadrupling their test load.

# For deployment, it will be necessary to create a PyPI API token and store it as a secret
# https://docs.github.com/en/actions/reference/encrypted-secrets

name: Python package

# Set once
env:
  SUBPACKAGE: TODO

on:
  push:
    branches: [ main ]
    tags: [ '*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        pip-flags: ['', '--editable']
        pydra:
        - 'pydra'
        - '--editable git+https://github.com/nipype/pydra.git#egg=pydra'

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
    - name: Install Pydra
      run: |
        pip install ${{ matrix.pydra }}
        python -c "import pydra as m; print(f'{m.__name__} {m.__version__} @ {m.__file__}')"
    - name: Install task package
      run: |
        pip install ${{ matrix.pip-flags }} ".[dev]"
        python -c "import pydra.tasks.$SUBPACKAGE as m; print(f'{m.__name__} {m.__version__} @ {m.__file__}')"
        python -c "import pydra as m; print(f'{m.__name__} {m.__version__} @ {m.__file__}')"
    - name: Test with pytest
      run: |
        pytest -sv --doctest-modules pydra/tasks/$SUBPACKAGE

  deploy:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install build tools
      run: python -m pip install --upgrade pip setuptools wheel twine
    - name: Build source and wheel distributions
      run: python setup.py sdist bdist_wheel
    - name: Check distributions
      run: twine check dist/*
    - uses: actions/upload-artifact@v2
      with:
        name: distributions
        path: dist/
    - name: Upload to PyPI (on tags)
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
